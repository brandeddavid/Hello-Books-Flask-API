FORMAT: 1A

# Hello Books API Documentation

This a API Documentation for Hello Books Application. A simple application that helps manage a library and its processes like stocking, tracking and renting books.

# Group Auth 

## Auth Collections [/api/v1/auth]

### Add a User [POST /api/v1/auth/register]
+ Request (application/json)
    {
        "email":"test@gmail.com",
        "username":"test",
        "first_name":"Test",
        "last_name":"User",
        "password":"password1234",
        "confirm_password": "password1234"
    }

+ Response 200 (application/json)
    + Body
        {
            'Message': 'User Created Successfully'
        }

### Login [POST /api/v1/auth/login]
+ Request (application/json)
    {
        "username":"test",
        "password":"password1234"
    }

+ Response 200 (application/json)
    + Body 
        {
            "Message": "Successfully logged in", 
            "Token": "--access-token--"
        }

### Reset User password [PUT /api/v1/auth/reset-password/{id}]
+ Parameter
    + id = '1'

+ Request (application/json)
    {
        "username":"test",
        "password":"password1234",
        "newpassword":"newpassword123"
    }

+ Response 200 (application/json)
    + Body
        {
            'Message': 'Password Reset Successful'
        }

### Logout [POST /api/v1/auth/logout]
+ Request 
    + Headers
        {
            "x-access-token":"--access-token--"
        }

+ Response 200 (application/json)
    + Body 
        {
            "Message":"Logged out successfully"
        }

# Group Admin

## Admin Collections [/api/v1/books]

### Add a New Book [POST /api/v1/books]
+ Request 
    + Headers
        {
            "x-access-token":"--access-token--"
        }

+ Request (application/json)

    {
        "title":"Windmills of Gods",
        "author":"Sidney Sheldon",
        "isbn":"36524728764",
        "publisher": "Publisher",
        "quantity": 45
    }
    
+ Response 201 (application/json)
    + Body
        {
            "Success": "Book added successfully"
        }

### Update a Book [PUT /api/v1/books/Books/{id}]
+ Parameter
    + id = '1'

+ Request 
    + Headers
        {
            "x-access-token":"--access-token--"
        }
    
+ Request (application/json)
    {
        "title":"Windmills of Gods",
        "author":"Sidney Sheldon",
        "isbn":"36524728764",
        "publisher": "Publisher",
        "quantity": 100
    }

+ Response 200 (application/json)
    {
        'Message': 'Book Update Successful'
    }

### Delete A Book [DELETE /api/v1/books/{id}]
+ Parameter
    + id = '1'

+ Request 
    + Headers
        {
            "x-access-token":"--access-token--"
        }

+ Response 200 (application/json)
    + Body
        {
            "Message":"Book Deleted Successfully"
        }

# Group Books

## Books Collections [/api/v1/books]

### Get All Books [GET /api/v1/books]
+ Response 200 (application/json)
    + Attributes
        - Books (array[Book])

### Get Individual Book[GET /api/v1/books/{id}]
+ Parameter
    + id: '1' - The id of the book

+ Response 200 (application/json)
    + Attributes
        - Include Book


# Group Users 

## User Collections [/api/v1/users]

### Get all Users [GET /api/v1/users]
+ Response 200 (application/json)
    + Attributes
        - Users (array[User])

### Borrow Book [POST /api/v1/users/books/{id}]
+ Parameter
    + id = '1'

+ Request 
    + Headers
        {
            "x-access-token":"--access-token--"
        }

+ Response (application/json)
    + Body
        {
            'Message': 'Book borrowed successfully'
        }

### Return Book [POST /api/v1/users/books/{id}]
+ Parameter
    + id = '1'

+ Request 
    + Headers
        {
            "x-access-token":"--access-token--"
        }

+ Response (application/json)
    + Body
        {
            'Message': 'Book returned successfully'
        }

### Borrowing History [POST /api/users/books]
+ Request 
    + Headers
        {
            "x-access-token":"--access-token--"
        }

+ Response 200 (application/json)
    + Attributes
        - Borrow History (array[History])

### Borrowing History [POST /api/users/books?returned=false]
+ Request 
    + Headers
        {
            "x-access-token":"--access-token--"
        }

+ Response 200 (application/json)
    + Attributes
        - Unreturned Books (array[Unreturned])

# Data Structures
## Book (object)
- title: The Lean Startup(string) - The title of the book
- author: Eric Ries (string) - The author of the book
- isbn: 8298748374 (string) - The ISBN number of the book
- availability: (boolean) - Book's availability
- publisher: (string) - Book's publisher

## User (object)
- username: test (string) - The user's username
- email: test@gmail.com (string) - The user's email
- full_name: Test User (string) - The user's full name 
- is_admin: True (boolean) - The user's admin status 

## History (object)
- Title: Windmills Of Gods (string) - Book title
- Date Borrowed: Thu, 21 Jun 2018 00:00:00 GMT (string) - Date book borrowed
- Date Returned: Thu, 21 Jun 2018 00:00:00 GMT(string) -  Date book returned

## Unreturned (object)
- Title: Windmills Of Gods (string) - Book title
- Date Borrowed: Thu, 21 Jun 2018 00:00:00 GMT (string) - Date book borrowed
- Due Date: Thu, 21 Jul 2018 00:00:00 GMT(string) -  Date book returned
